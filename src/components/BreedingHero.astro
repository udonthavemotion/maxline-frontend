---
import { getImageUrl, isVideo } from "@/lib/strapi";

interface Props {
  title?: string;
  subtext?: string | any[];
  partnershipNote?: string;
  heroMedia?: any[];
  className?: string;
}

const { 
  title = "MAX LINE HORRORBULLZ",
  subtext,
  partnershipNote = "In partnership with HorrorBulz HQ",
  heroMedia = [],
  className = ""
} = Astro.props;

// Get the primary hero media (first item from hero_image or video_section)
const primaryMedia = heroMedia && heroMedia.length > 0 ? heroMedia[0] : null;
const hasVideo = primaryMedia && isVideo(primaryMedia);
const hasImage = primaryMedia && !isVideo(primaryMedia);

// Helper function to process rich text content
function processSubtext(content: string | any[] | undefined): string {
  if (!content) return '';
  if (typeof content === 'string') return content;
  if (Array.isArray(content)) {
    return content.map(item => {
      if (typeof item === 'string') return item;
      if (item.children) {
        return item.children.map((child: any) => child.text || '').join('');
      }
      return '';
    }).join(' ');
  }
  return '';
}

const processedSubtext = processSubtext(subtext);
---

<section class={`relative min-h-screen flex items-center justify-center overflow-hidden ${className}`}>
  <!-- Background Media -->
  {hasVideo && (
    <div class="absolute inset-0 w-full h-full">
      <video
        autoplay
        loop
        muted
        playsinline
        class="absolute inset-0 w-full h-full object-cover"
        poster={heroMedia.find(media => !isVideo(media)) ? getImageUrl(heroMedia.find(media => !isVideo(media)), 'large') : undefined}
      >
        <source src={getImageUrl(primaryMedia, 'large')} type={primaryMedia.mime} />
      </video>
    </div>
  )}
  
  {hasImage && !hasVideo && (
    <div 
      class="absolute inset-0 w-full h-full"
      style={`background-image: url('${getImageUrl(primaryMedia, 'large')}'); background-size: cover; background-position: center; background-repeat: no-repeat;`}
    >
    </div>
  )}

  <!-- Fallback gradient background if no media -->
  {!primaryMedia && (
    <div class="absolute inset-0 bg-gradient-to-br from-gray-900 via-blue-900 to-orange-900"></div>
  )}

      <!-- Overlay for better text readability -->
    <div class="absolute inset-0 bg-black bg-opacity-20 z-10"></div>
  
  <!-- Content Overlay -->
  <div class="relative z-20 text-center text-white px-4 md:px-8 max-w-6xl mx-auto">
    
    <!-- Partnership Note -->
    {partnershipNote && (
      <div class="mb-6 opacity-90">
        <p class="text-sm md:text-base font-medium tracking-wide uppercase">
          {partnershipNote}
        </p>
      </div>
    )}

    <!-- Main Title -->
    <h1 class="text-5xl md:text-7xl lg:text-8xl font-extrabold mb-6 leading-tight">
      <span class="bg-gradient-to-r from-white via-blue-100 to-orange-200 bg-clip-text text-transparent drop-shadow-2xl">
        {title}
      </span>
    </h1>

    <!-- Subtext -->
    {processedSubtext && (
      <div class="mb-8 max-w-4xl mx-auto">
        <div class="text-xl md:text-2xl lg:text-3xl font-bold text-white opacity-95 leading-relaxed">
          {processedSubtext}
        </div>
      </div>
    )}

    <!-- Call to Action Buttons -->
    <div class="flex flex-col sm:flex-row gap-4 justify-center items-center mt-12">
      <a 
        href="/studs"
        class="bg-orange-600 hover:bg-orange-700 text-white font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-2xl text-lg"
      >
        View Our Studs
      </a>
      <a 
        href="/puppies"
        class="bg-transparent border-2 border-white text-white hover:bg-white hover:text-gray-900 font-bold py-4 px-8 rounded-lg transition-all duration-300 transform hover:scale-105 shadow-xl text-lg"
      >
        Available Puppies
      </a>
    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20">
    <div class="animate-bounce">
      <svg class="w-6 h-6 text-white opacity-75" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </div>
  </div>
</section>

<style>
  /* Ensure video covers the full area properly */
  video {
    object-fit: cover;
    width: 100vw;
    height: 100vh;
  }
  
  /* Smooth text shadow for better readability */
  h1 {
    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }
</style> 